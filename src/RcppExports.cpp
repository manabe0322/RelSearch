// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// tousa
IntegerVector tousa(int start, int end, int interval);
RcppExport SEXP _relsearch_tousa(SEXP startSEXP, SEXP endSEXP, SEXP intervalSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type start(startSEXP);
    Rcpp::traits::input_parameter< int >::type end(endSEXP);
    Rcpp::traits::input_parameter< int >::type interval(intervalSEXP);
    rcpp_result_gen = Rcpp::wrap(tousa(start, end, interval));
    return rcpp_result_gen;
END_RCPP
}
// searchPos
int searchPos(NumericVector vec, double target);
RcppExport SEXP _relsearch_searchPos(SEXP vecSEXP, SEXP targetSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type vec(vecSEXP);
    Rcpp::traits::input_parameter< double >::type target(targetSEXP);
    rcpp_result_gen = Rcpp::wrap(searchPos(vec, target));
    return rcpp_result_gen;
END_RCPP
}
// kinLike2
NumericVector kinLike2(NumericVector qgt, NumericVector rgt, NumericVector af, NumericVector afAl, NumericVector probIBD, bool consMu, double myu, double ape);
RcppExport SEXP _relsearch_kinLike2(SEXP qgtSEXP, SEXP rgtSEXP, SEXP afSEXP, SEXP afAlSEXP, SEXP probIBDSEXP, SEXP consMuSEXP, SEXP myuSEXP, SEXP apeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type qgt(qgtSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rgt(rgtSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type af(afSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type afAl(afAlSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type probIBD(probIBDSEXP);
    Rcpp::traits::input_parameter< bool >::type consMu(consMuSEXP);
    Rcpp::traits::input_parameter< double >::type myu(myuSEXP);
    Rcpp::traits::input_parameter< double >::type ape(apeSEXP);
    rcpp_result_gen = Rcpp::wrap(kinLike2(qgt, rgt, af, afAl, probIBD, consMu, myu, ape));
    return rcpp_result_gen;
END_RCPP
}
// makeDummyAf2
NumericMatrix makeDummyAf2(NumericMatrix dummyGt, NumericVector af, NumericVector afAl);
RcppExport SEXP _relsearch_makeDummyAf2(SEXP dummyGtSEXP, SEXP afSEXP, SEXP afAlSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type dummyGt(dummyGtSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type af(afSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type afAl(afAlSEXP);
    rcpp_result_gen = Rcpp::wrap(makeDummyAf2(dummyGt, af, afAl));
    return rcpp_result_gen;
END_RCPP
}
// makeDummyGt2
NumericMatrix makeDummyGt2(NumericVector qgt, NumericVector rgt);
RcppExport SEXP _relsearch_makeDummyGt2(SEXP qgtSEXP, SEXP rgtSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type qgt(qgtSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rgt(rgtSEXP);
    rcpp_result_gen = Rcpp::wrap(makeDummyGt2(qgt, rgt));
    return rcpp_result_gen;
END_RCPP
}
// kinLikeDrop2
NumericVector kinLikeDrop2(NumericVector qgt, NumericVector rgt, NumericVector af, NumericVector afAl, NumericVector probIBD, bool consMu, double myu, double ape, double pd);
RcppExport SEXP _relsearch_kinLikeDrop2(SEXP qgtSEXP, SEXP rgtSEXP, SEXP afSEXP, SEXP afAlSEXP, SEXP probIBDSEXP, SEXP consMuSEXP, SEXP myuSEXP, SEXP apeSEXP, SEXP pdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type qgt(qgtSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rgt(rgtSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type af(afSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type afAl(afAlSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type probIBD(probIBDSEXP);
    Rcpp::traits::input_parameter< bool >::type consMu(consMuSEXP);
    Rcpp::traits::input_parameter< double >::type myu(myuSEXP);
    Rcpp::traits::input_parameter< double >::type ape(apeSEXP);
    Rcpp::traits::input_parameter< double >::type pd(pdSEXP);
    rcpp_result_gen = Rcpp::wrap(kinLikeDrop2(qgt, rgt, af, afAl, probIBD, consMu, myu, ape, pd));
    return rcpp_result_gen;
END_RCPP
}
// calcKinLr2
NumericMatrix calcKinLr2(NumericVector query, NumericVector ref, List afList, List afAlList, NumericVector probIBD, bool consMu, NumericVector myuAll, NumericVector apeAll, int dropMethStr, double pd);
RcppExport SEXP _relsearch_calcKinLr2(SEXP querySEXP, SEXP refSEXP, SEXP afListSEXP, SEXP afAlListSEXP, SEXP probIBDSEXP, SEXP consMuSEXP, SEXP myuAllSEXP, SEXP apeAllSEXP, SEXP dropMethStrSEXP, SEXP pdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type query(querySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ref(refSEXP);
    Rcpp::traits::input_parameter< List >::type afList(afListSEXP);
    Rcpp::traits::input_parameter< List >::type afAlList(afAlListSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type probIBD(probIBDSEXP);
    Rcpp::traits::input_parameter< bool >::type consMu(consMuSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type myuAll(myuAllSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type apeAll(apeAllSEXP);
    Rcpp::traits::input_parameter< int >::type dropMethStr(dropMethStrSEXP);
    Rcpp::traits::input_parameter< double >::type pd(pdSEXP);
    rcpp_result_gen = Rcpp::wrap(calcKinLr2(query, ref, afList, afAlList, probIBD, consMu, myuAll, apeAll, dropMethStr, pd));
    return rcpp_result_gen;
END_RCPP
}
// matchY2
IntegerMatrix matchY2(CharacterVector qHap, CharacterVector rHap);
RcppExport SEXP _relsearch_matchY2(SEXP qHapSEXP, SEXP rHapSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type qHap(qHapSEXP);
    Rcpp::traits::input_parameter< CharacterVector >::type rHap(rHapSEXP);
    rcpp_result_gen = Rcpp::wrap(matchY2(qHap, rHap));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_relsearch_tousa", (DL_FUNC) &_relsearch_tousa, 3},
    {"_relsearch_searchPos", (DL_FUNC) &_relsearch_searchPos, 2},
    {"_relsearch_kinLike2", (DL_FUNC) &_relsearch_kinLike2, 8},
    {"_relsearch_makeDummyAf2", (DL_FUNC) &_relsearch_makeDummyAf2, 3},
    {"_relsearch_makeDummyGt2", (DL_FUNC) &_relsearch_makeDummyGt2, 2},
    {"_relsearch_kinLikeDrop2", (DL_FUNC) &_relsearch_kinLikeDrop2, 9},
    {"_relsearch_calcKinLr2", (DL_FUNC) &_relsearch_calcKinLr2, 10},
    {"_relsearch_matchY2", (DL_FUNC) &_relsearch_matchY2, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_relsearch(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
